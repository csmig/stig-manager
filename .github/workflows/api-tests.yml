name: Test API
on:
  workflow_dispatch:
  pull_request:
    branches:
      - ci-workflow
    paths:
    - 'api/source/**'
    - 'clients/extjs/**'
    - 'test/api/**'

jobs:
  test_api:
    name: Build production API and test
    runs-on: ubuntu-latest
    steps:
      - 
        name: Check out the repo
        uses: actions/checkout@v2
      -
        name: Run mock IdP
        id: idp-run
        working-directory: ./test/api/oidc
        run: |
          python3 -m http.server 8080 &
      -
        name: Run MySQL
        id: mysql-run
        run: |
          docker run -d --name stig-manager-db \
          -p 3306:3306 \
          -e MYSQL_ROOT_PASSWORD=rootpw \
          -e MYSQL_DATABASE=stigman \
          -e MYSQL_USER=stigman \
          -e MYSQL_PASSWORD=stigman \
          mysql:8
      # -
      #   name: Build API
      #   id: api-build
      #   run: |
      #     docker build -t stig-manager .
      -
        name: Get API dependencies
        id: api-packages
        working-directory: ./api/source
        run: |
          npm ci
      # -
      #   name: Run API
      #   id: api-run
      #   run: |
      #     docker run -d --name stig-manager-api \
      #     --net=host \
      #     -e STIGMAN_API_PORT=64001 \
      #     -e STIGMAN_DB_HOST=localhost \
      #     -e STIGMAN_DB_PORT=3306 \
      #     -e STIGMAN_DB_PASSWORD=stigman \
      #     -e STIGMAN_API_AUTHORITY=http://localhost:8080/auth/realms/stigman \
      #     stig-manager
      -
        name: Run API
        id: api-run
        working-directory: ./api/source
        run: |
          STIGMAN_API_PORT=64001 \
          STIGMAN_DB_HOST=localhost \
          STIGMAN_DB_PORT=3306 \
          STIGMAN_DB_PASSWORD=stigman \
          STIGMAN_API_AUTHORITY=http://localhost:8080/auth/realms/stigman \
          node index.js &
      -
        name: Wait for API bootstrap
        run: until $(curl --output /dev/null --silent --fail http://localhost:64001/api/op/configuration); do printf '.'; sleep 5; done
      -
        name: Initialize API
        id: api-init
        run: |
          TOKEN="Authorization: Bearer eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJGSjg2R2NGM2pUYk5MT2NvNE52WmtVQ0lVbWZZQ3FvcXRPUWVNZmJoTmxFIn0.eyJleHAiOjE2NjkyMTM0MzIsImlhdCI6MTYwNDQxMzQzMiwiYXV0aF90aW1lIjoxNjA0NDEzNDMyLCJqdGkiOiJhMGE2MzI1My01NmE4LTRiNDItODBjYi0yMDJmMmM0Y2IwYjIiLCJpc3MiOiJodHRwOi8vbG9jYWxob3N0OjgwODAvYXV0aC9yZWFsbXMvc3RpZ21hbiIsImF1ZCI6WyJyZWFsbS1tYW5hZ2VtZW50IiwiYWNjb3VudCJdLCJzdWIiOiJhZmU2MTEzNC01NWVhLTRiODgtOGE3Ni0yYWE1YTRhM2QzMjYiLCJ0eXAiOiJCZWFyZXIiLCJhenAiOiJzdGlnLW1hbmFnZXIiLCJzZXNzaW9uX3N0YXRlIjoiNTc2M2FmNzQtYWU5OS00NDA3LWE0MWQtMTY3MjRkZTUxZmJhIiwiYWNyIjoiMSIsInJlYWxtX2FjY2VzcyI6eyJyb2xlcyI6WyJjcmVhdGVfY29sbGVjdGlvbiIsImFkbWluIiwidXNlciJdfSwicmVzb3VyY2VfYWNjZXNzIjp7InJlYWxtLW1hbmFnZW1lbnQiOnsicm9sZXMiOlsidmlldy11c2VycyIsInF1ZXJ5LWdyb3VwcyIsInF1ZXJ5LXVzZXJzIl19LCJhY2NvdW50Ijp7InJvbGVzIjpbIm1hbmFnZS1hY2NvdW50IiwibWFuYWdlLWFjY291bnQtbGlua3MiLCJ2aWV3LXByb2ZpbGUiXX19LCJzY29wZSI6IiIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwicHJlZmVycmVkX3VzZXJuYW1lIjoic3RpZ21hbmFkbWluIn0.GlBHGGl7D2MXQEHN3WR81UqE9XUAldiqEILWFU-nh2wzbBOja0HeaB5DgqUctJV3D6mlimb3aXblpx-6dqcYUoJZ1101alOzlpuY-EzP6WE9mbEAtP19xmzKOXZhEIbuYKCgKGSN_80uFkpTtQTn6XmSXohtHYEDS2qtG4Whhtk"

          curl -f -X GET http://localhost:64001/api/user -H "accept: application/json" -H "$TOKEN" -s | jq .
          echo

          curl -f -X POST "http://localhost:64001/api/stigs" -H "accept: application/json" -H "$TOKEN" -F "replace=true" -F "importFile=@test/api/stigs/U_VPN_SRG_V1R1_Manual-xccdf.xml;type=text/xml" -s | jq .
          echo

          curl -f -X POST "http://localhost:64001/api/stigs" -H "accept: application/json" -H "$TOKEN" -F "replace=true" -F "importFile=@test/api/stigs/U_RHEL_7_STIG_V3R0-3_Manual-xccdf.xml;type=text/xml" -s | jq .
          echo

          curl -f -X POST "http://localhost:64001/api/stigs" -H "accept: application/json" -H "$TOKEN" -F "replace=true" -F "importFile=@test/api/stigs/U_MS_Windows_10_STIG_V1R23_Manual-xccdf.xml;type=text/xml" -s | jq .
          echo

          curl -f -X GET "http://localhost:64001/api/stigs" -H "accept: application/json" -H "$TOKEN" -s | jq .
          echo

          curl -f -X POST "http://localhost:64001/api/op/appdata?elevate=true" -H "accept: application/json" -H "$TOKEN" -H "Content-Type: multipart/form-data" -F "importFile=@test/api/appdata.json;type=application/json" -s
          echo

          curl -f -X GET "http://localhost:64001/api/collections?projection=owners&projection=statistics" -H "accept: application/json" -H "$TOKEN" -s | jq .
          echo
      -
        name: Install Newman reporter
        id: newman-install
        run: |
          sudo npm install -g newman-reporter-htmlextra
      -
        name: Newman GETs
        id: newman-get-run
        working-directory: ./test/api
        run: |
          set -o pipefail
          newman run postman_collection.json -e postman_environment.json -d collectionRunnerData.json -n 6 --folder GETs -r cli,htmlextra --reporter-cli-no-assertions --reporter-cli-no-console --reporter-htmlextra-showOnlyFails | grep -A50 '┌─────'
      - 
        name: Upload artificat
        id: artifact-upload
        uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: newman-htmlextra
          path: ./test/api/newman
          
          

          
          
          
          
          